{"ast":null,"code":"var _jsxFileName = \"/home/redapt/repos/Giodrano-SC/Giodrano-SC/client/src/Components/LATIN/SearchBar.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchBar = _ref => {\n  _s();\n  let {\n    onSearchResults\n  } = _ref;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Function to fetch search results\n  const fetchSearchResults = async query => {\n    try {\n      // Assuming you want to search across all items based on a generic query\n      const response = await axios.get(\"/api/v1/items\", {\n        params: {\n          search: query // You might need to adjust based on how your backend handles search queries\n        }\n      });\n\n      // Call the callback function to pass search results to the parent component\n      onSearchResults(response.data.items);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n    }\n  };\n  const handleSearchChange = e => {\n    const query = e.target.value;\n    setSearchQuery(query);\n\n    // Fetch search results if query is not empty\n    if (query) {\n      fetchSearchResults(query);\n    } else {\n      // Reset search results when query is empty\n      onSearchResults([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: handleSearchChange,\n      type: \"text\",\n      name: \"search\",\n      placeholder: \"Search\",\n      value: searchQuery,\n      id: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchBar, \"4/Qdl0R3tQNJqUS4eMrvY/uMU/4=\");\n_c = SearchBar;\nexport default SearchBar;\nvar _c;\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","SearchBar","_ref","_s","onSearchResults","searchQuery","setSearchQuery","fetchSearchResults","query","response","get","params","search","data","items","error","console","handleSearchChange","e","target","value","children","onChange","type","name","placeholder","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/redapt/repos/Giodrano-SC/Giodrano-SC/client/src/Components/LATIN/SearchBar.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst SearchBar = ({ onSearchResults }) => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  // Function to fetch search results\n  const fetchSearchResults = async (query) => {\n    try {\n      // Assuming you want to search across all items based on a generic query\n      const response = await axios.get(\"/api/v1/items\", {\n        params: {\n          search: query, // You might need to adjust based on how your backend handles search queries\n        },\n      });\n\n      // Call the callback function to pass search results to the parent component\n      onSearchResults(response.data.items);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n    }\n  };\n\n  const handleSearchChange = (e) => {\n    const query = e.target.value;\n    setSearchQuery(query);\n\n    // Fetch search results if query is not empty\n    if (query) {\n      fetchSearchResults(query);\n    } else {\n      // Reset search results when query is empty\n      onSearchResults([]);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        onChange={handleSearchChange}\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"Search\"\n        value={searchQuery}\n        id=\"search-input\"\n      />\n    </div>\n  );\n};\n\nexport default SearchBar;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EACpC,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAElD;EACA,MAAMW,kBAAkB,GAAG,MAAOC,KAAK,IAAK;IAC1C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,eAAe,EAAE;QAChDC,MAAM,EAAE;UACNC,MAAM,EAAEJ,KAAK,CAAE;QACjB;MACF,CAAC,CAAC;;MAEF;MACAJ,eAAe,CAACK,QAAQ,CAACI,IAAI,CAACC,KAAK,CAAC;IACtC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IACxD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMV,KAAK,GAAGU,CAAC,CAACC,MAAM,CAACC,KAAK;IAC5Bd,cAAc,CAACE,KAAK,CAAC;;IAErB;IACA,IAAIA,KAAK,EAAE;MACTD,kBAAkB,CAACC,KAAK,CAAC;IAC3B,CAAC,MAAM;MACL;MACAJ,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAAqB,QAAA,eACErB,OAAA;MACEsB,QAAQ,EAAEL,kBAAmB;MAC7BM,IAAI,EAAC,MAAM;MACXC,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,QAAQ;MACpBL,KAAK,EAAEf,WAAY;MACnBqB,EAAE,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CA7CIF,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA+Cf,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}